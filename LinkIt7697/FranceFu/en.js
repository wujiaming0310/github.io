Blockly.Msg.FRANCE1_CUSTOMCODE_SHOW = "Custom Code";
Blockly.Msg.FRANCE1_CODE_SHOW = "Custom Code";
Blockly.Msg.FRANCE1_VARIABLE_SHOW = "Custom Variable";
Blockly.Msg.FRANCE1_COMMENT_SHOW = "Comment";
Blockly.Msg.FRANCE1_COMMENT_BLOCK_SHOW = "Block Comment(\\n)";
Blockly.Msg.FRANCE1_HEAD_SHOW = "Custom Head";
Blockly.Msg.FRANCE1_INSTRUCTION_SHOW = "Instruction";
Blockly.Msg.FRANCE2_HEAD_HTTPS_SHOW = "TCP HTTPS";
Blockly.Msg.FRANCE2_HEAD_HTTP_SHOW = "TCP HTTP";
Blockly.Msg.FRANCE2_DOMAIN_SHOW = "Domain"; 
Blockly.Msg.FRANCE2_PORT_SHOW = "Port"; 		
Blockly.Msg.FRANCE2_REQUEST_SHOW = "Request"; 	
Blockly.Msg.FRANCE2_TIMEOUT_SHOW = "Timeout"; 
Blockly.Msg.FRANCE2_SECOND_SHOW = "(ms)"; 
Blockly.Msg.FRANCE3_HEAD_LINE_SHOW = "Line Notify";
Blockly.Msg.FRANCE4_HEAD_HTTPS_SHOW = "TCP HTTPS (ESP32)";
Blockly.Msg.FRANCE4_HEAD_HTTP_SHOW = "TCP HTTP (ESP32)";
Blockly.Msg.FRANCE5_HEAD_LINE_SHOW = "Line Notify (ESP32)";
Blockly.Msg.FRANCE5_LINE_HTTP_SHOW = "Line Notify (http)";
Blockly.Msg.FRANCE6_CLOSE_POWERDOG_SHOW = "ESP32 Close Power Dog";
Blockly.Msg.ESP32_SET_WIFI_UNTIL_READY_TITLE = "ESP32 connect to Wi-Fi AP";
Blockly.Msg.FRANCE7_SHOWCODE_SHOW = "Monitor Code(Console)  Continued";
Blockly.Msg.ESP32_ANALOGWRITE_SHOW = "ESP32 analogWrite";
Blockly.Msg.ARDUINO_ANALOGWRITE_SHOW = "analogWrite";
Blockly.Msg.ESP32_ANALOGWRITE_VALUE_SHOW = "value [0-255]";
Blockly.Msg.ESP32_CHANNEL_SHOW = "channel";
Blockly.Msg.SERVERMODULE_SHOW = "Connect to Wi-Fi AP";
Blockly.Msg.SERVERMODULE_SSID_SHOW = "SSID";
Blockly.Msg.SERVERMODULE_PASSWORD_SHOW = "PASSWORD";
Blockly.Msg.SERVERMODULE_SSID_AP_SHOW = "AP SSID";
Blockly.Msg.SERVERMODULE_PASSWORD_AP_SHOW = "AP PASSWORD";
Blockly.Msg.SERVERMODULE_FRAMESIZE_SHOW = "Framesize";
Blockly.Msg.SERVERMODULE_SETUP_SHOW = "setup";
Blockly.Msg.SERVERMODULE_LOOP_SHOW = "loop";
Blockly.Msg.ESP32_SERVERMODULE_SHOW = "ESP32 connect to Wi-Fi AP";
Blockly.Msg.ESP32_CAM_SERVERMODULE_SHOW = "ESP32-CAM connect to Wi-Fi AP";
Blockly.Msg.ESP32_DIGITALWRITE_SHOW = "digitalWrite";
Blockly.Msg.ESP32_DIGITALWRITE_VALUE_SHOW = "value";
Blockly.Msg.ESP32_DIGITALWRITE_HIGH_SHOW = "HIGH";
Blockly.Msg.ESP32_DIGITALWRITE_LOW_SHOW = "LOW";
Blockly.Msg.SERVERMODULE_CMD_SHOW = "cmd";
Blockly.Msg.SERVERMODULE_FEEDBACK_SHOW = "Feedback =";
Blockly.Msg.SERVERMODULE_EXECUTE_SHOW = "Custom Command Region";
Blockly.Msg.SERVERMODULE_MAINPAGE_SHOW = "Main Page";
Blockly.Msg.SERVERMODULE_PARAMETER_GET_SHOW = "Get Paramater";
Blockly.Msg.SERVERMODULE_PARAMETER_SET_SHOW = "Set Paramater";
Blockly.Msg.SERVERMODULE_PARAMETER_FORMAT_SHOW = " ";
Blockly.Msg.SERVERMODULE_PARAMETER_EQUAL_SHOW = "equal to";
Blockly.Msg.SERVERMODULE_PIN_SHOW = "pin";
Blockly.Msg.SERVERMODULE_MODE_SHOW = "mode";
Blockly.Msg.SERVERMODULE_VALUE_SHOW = "value";
Blockly.Msg.SERVERMODULE_DIGITALWRITE_SHOW = "digitalWrite";
Blockly.Msg.SERVERMODULE_ANALOGWRITE_SHOW = "analogWrite";
Blockly.Msg.SERVERMODULE_DIGITALREAD_SHOW = "digitalRead";
Blockly.Msg.SERVERMODULE_ANALOGREAD_SHOW = "analogRead";
Blockly.Msg.SERVERMODULE_PARAMETER_SET_ADDRESS_SHOW = "URL Command";
Blockly.Msg.SERVERMODULE_PARAMETER_URLDECODE_SHOW = "URL Decode";
Blockly.Msg.MLX90614_SHOW = "Get";
Blockly.Msg.MLX90614_KIND_OBJECT_SHOW = "OBJECT";
Blockly.Msg.MLX90614_KIND_AMBIENT_SHOW = "AMBIENT";
Blockly.Msg.MLX90614_SCALE_SHOW = "Scale";
Blockly.Msg.MLX90614_COMPENSATION_SHOW = "Compensation";
Blockly.Msg.MLX90614_SCALE_CELCIUS_SHOW = "Celcius";
Blockly.Msg.MLX90614_SCALE_FAHRENHEIT_SHOW = "Fahrenheit";
Blockly.Msg.MLX90614_SCALE_KELVIN_SHOW = "Kelvin";
Blockly.Msg.ESP32_DHT11_PIN_SHOW = "Set DHT11 sensor pin";
Blockly.Msg.ESP32_DHT11_READ_SHOW = "Read DHT11 sensor value";
Blockly.Msg.ESP32_DHT11_GET_SHOW = "Get DHT11 sensor value";
Blockly.Msg.ESP32_DHT11_TEMPERATURE_SHOW = "Temperature";
Blockly.Msg.ESP32_DHT11_HUMIDITY_SHOW = "Humidity";
Blockly.Msg.ESP32_LCD1602_SHOW = "LCD1602";
Blockly.Msg.ESP32_LCD1602_ADDRESS_SHOW = "Address";
Blockly.Msg.ESP32_LCD1602_SDA_SHOW = "SDA";	  
Blockly.Msg.ESP32_LCD1602_SCL_SHOW = "SCL";
Blockly.Msg.ESP32_LCD1602_BACKLIGHT_SHOW = "LCD1602 blacklight";
Blockly.Msg.ESP32_LCD1602_CLEAR_SHOW = "LCD1602 clear";	
Blockly.Msg.ESP32_LCD1602_PRINT_SHOW = "LCD1602 print";
Blockly.Msg.ESP32_LCD1602_COL_SHOW = "Col";	  
Blockly.Msg.ESP32_LCD1602_ROW_SHOW = "Row";
Blockly.Msg.ESP32_LCD1602_STR_SHOW = "String";
Blockly.Msg.ESP32_LINE_TEXT_SHOW = "Text";
Blockly.Msg.ESP32_LINE_STICKER_SHOW = "Sticker";
Blockly.Msg.ESP32_LINE_IMAGE_SHOW = "Image";
Blockly.Msg.ESP32_LINE_BR_SHOW = "New Line";
Blockly.Msg.ESP32_LINE_MESSAGE_SHOW = "Message";
Blockly.Msg.ESP32_LINE_PACKAGEID_SHOW = "Packageid";
Blockly.Msg.ESP32_LINE_STICKERID_SHOW = "Stickerid";
Blockly.Msg.ESP32_LINE_ORIGINALCONTENTURL_SHOW = "OriginalContentUrl";
Blockly.Msg.ESP32_LINE_PREVIEWIMAGEURL_SHOW = "PreviewImageUrl";
Blockly.Msg.ESP32_LINE_TOKEN_SHOW = "Token";
Blockly.Msg.ESP32_LINE_NOTIFY_SHOW = "Notify";
Blockly.Msg.ESP32_BLUETOOTH_SHOW = "Bluetooth Module";
Blockly.Msg.ESP32_BLUETOOTH_BAUDRATE_SHOW = "Baud Rate";
Blockly.Msg.ESP32_BLUETOOTH_NAME_SHOW = "Name";
Blockly.Msg.ESP32_BLUETOOTH_FEEDBACK_SHOW = "Bluetooth Feedback";
Blockly.Msg.ESP32_BLUETOOTH_FEEDBACK_NEWLINE_SHOW = "Bluetooth Feedback(\\n)";
Blockly.Msg.ESP32_BLUETOOTH_GETDATA_SHOW = "Bluetooth Get Data";
Blockly.Msg.ESP32_BLUETOOTH_INITIAL_SHOW = "Bluetooth Initial";
Blockly.Msg.ESP32_BLUETOOTH_READDATA_SHOW = "Bluetooth Read Data";
Blockly.Msg.LINKIT7697_SERVERMODULE_SHOW = "LinkIt7697 connect to Wi-Fi AP";
Blockly.Msg.SERVERMODULE_TOINT_SHOW = "toInt()";
Blockly.Msg.SERVERMODULE_TODOUBLE_SHOW = "toDouble()";
Blockly.Msg.SERVERMODULE_TOFLOAT_SHOW = "toFloat()";
Blockly.Msg.SERVERMODULE_TOLOWERCASE_SHOW = "toLowerCase()";
Blockly.Msg.SERVERMODULE_TOUPPERCASE_SHOW = "toUpperCase()";
Blockly.Msg.SERVERMODULE_TRIM_SHOW = "trim()";
Blockly.Msg.SERVERMODULE_C_STR_SHOW = "c_str()";
Blockly.Msg.SERVERMODULE_LENGTH_SHOW = "length()";

//coco-ssd
Blockly.Msg.ESP32_CAM_TFJS_COCOSSD_OBJECT_SHOW = "Object";
Blockly.Msg.ESP32_CAM_TFJS_COCOSSD_SCORE_SHOW = "Score";

//SERIAL
Blockly.Msg["FU_SERIAL_HUE"] = "60";
Blockly.Msg["FU_SERIAL"] = "SERIAL"
Blockly.Msg["FU_SERIAL_BAUDRATE"] = "Baud Rate";
Blockly.Msg["FU_SERIAL_CONFIG"] = "Config";
Blockly.Msg["FU_SERIAL_READY"] = "Wait for ready";
Blockly.Msg["FU_SERIAL_END"] = "Disable";
Blockly.Msg["FU_SERIAL_PRINT"] = "Print data";
Blockly.Msg["FU_SERIAL_WRITE"] = "Write data";
Blockly.Msg["FU_SERIAL_PRINTLN"] = "Print data (\\n)";
Blockly.Msg["FU_SERIAL_FORMAT"] = "Format";
Blockly.Msg["FU_SERIAL_PRINT_BIN"] = "BIN"; 
Blockly.Msg["FU_SERIAL_PRINT_OCT"] = "OCT";
Blockly.Msg["FU_SERIAL_PRINT_DEC"] = "DEC"; 
Blockly.Msg["FU_SERIAL_PRINT_HEX"] = "HEX";

Blockly.Msg["ESP32_CAM_GOOGLEDRIVE_SHOW"] = "ESP32-CAM Upload Still to Google drive";
Blockly.Msg["ESP32_CAM_SCRIPTID_SHOW"] = "Apps Script ID";	
Blockly.Msg["ESP32_CAM_LINETOKEN_SHOW"] = "Line Notify token";
Blockly.Msg["ESP32_CAM_FOLDERNAME_SHOW"] = "Folder Name";	
Blockly.Msg["ESP32_CAM_FILENAME_SHOW"] = "File Name";

Blockly.Msg["EZ_SET"] = "set";
Blockly.Msg["EZ_SIZE"] = "size";
Blockly.Msg["EZ_TEXT"] = "text";
Blockly.Msg["OLED_XBM_VALUE"] = "XBM value";
Blockly.Msg["OLED_FONT_TTF"] = "TTF font";
Blockly.Msg["AIRQUALITY_ESP32"] = "Taiwan air quality(ESP32)";
Blockly.Msg["AIRQUALITY_SITE"] = "site";
Blockly.Msg["AIRQUALITY_AQI"] = "AQI";
Blockly.Msg["AIRQUALITY_PM25"] = "PM2.5";
Blockly.Msg["AIRQUALITY_STATE"] = "state";
Blockly.Msg["EZ_RED"] = "red";
Blockly.Msg["EZ_YELLOW"] = "yellow";
Blockly.Msg["EZ_GREEN"] = "green";
Blockly.Msg["EZ_STATE"] = "state";
Blockly.Msg["EZ_OPEN"] = "on";
Blockly.Msg["EZ_CLOSE"] = "off";
Blockly.Msg["EZ_DIGITALWRITE"] = "DigitalWrite";
Blockly.Msg["EZ_BUTTON"] = "Button";
Blockly.Msg["EZ_RELAY"] = "Relay";
Blockly.Msg["EZ_ANALOGWRITE"] = "AnalogWrite[0-255]";
Blockly.Msg["EZ_CHANNEL"] = "channel[0-15]";
Blockly.Msg["EZ_DIGITALREAD"] = "DigitalRead";
Blockly.Msg["EZ_BUTTONA"] = "A";
Blockly.Msg["EZ_BUTTONB"] = "B";
Blockly.Msg["EZ_BUTTONAB"] = "A+B";
Blockly.Msg["EZ_PRESS"] = "press";
Blockly.Msg["EZ_POTENTIOMETER"] = "Potentiometer";
Blockly.Msg["EZ_ANALOGINREAD"] = "AnalogRead";
Blockly.Msg["EZ_PHOTORESISTER"] = "Photoresister";
Blockly.Msg["EZ_BUZZER"] = "Buzzer";
Blockly.Msg["EZ_FREQUENCY"] = "frequency";
Blockly.Msg["EZ_DELAY_MS"] = "delay(ms)";
Blockly.Msg["EZ_STOP"] = "stop";
Blockly.Msg["EZ_BUZZER_ESP32"] = "Buzzer(ESP32)";
Blockly.Msg["EZ_HUMIDITY"] = "humidity (%)";
Blockly.Msg["EZ_TEMPERATURE"] = "temperature (Â°C)";
Blockly.Msg["EZ_RGB"] = "RGB Led";
Blockly.Msg["EZ_RGB1"] = "1";
Blockly.Msg["EZ_RGB2"] = "2";
Blockly.Msg["EZ_RGB3"] = "3";
Blockly.Msg["EZ_RGB_COLOR"] = "color";
Blockly.Msg["EZ_RGB_CLEAR"] = "clear";
Blockly.Msg["EZ_RGB_BRIGHTNESS"] = "brightness[0-255]";
Blockly.Msg["EZ_RGB_NUMBER"] = "[1-3]";
Blockly.Msg["EZ_RGB_COLOR_RANDOM"] = "random color";
Blockly.Msg["EZ_IR"] = "IR receiver";
Blockly.Msg["EZ_IR_GET_EXECUTE"] = "execute after getting data";
Blockly.Msg["EZ_IR_GET_STRING"] = "get data (string)";
Blockly.Msg["EZ_IR_GET_PROTOCOL"] = "get data (protocol)";
Blockly.Msg["OLED_INITIAL"] = "initial";
Blockly.Msg["OLED_SPECIFICATION"] = "specification";
Blockly.Msg["OLED_DISPLAY_MODE_DEFAULT"] = "default display mode";
Blockly.Msg["OLED_UTF8_CHINESE"] = "UTF8(Chinese)";
Blockly.Msg["OLED_ROTATE_NO_HORIZONTAL"] = "no rotation and horizontal";
Blockly.Msg["OLED_ROTATE_90"] = "rotate 90 degrees clockwise";
Blockly.Msg["OLED_ROTATE_180"] = "rotate 180 degrees clockwise";
Blockly.Msg["OLED_ROTATE_270"] = "rotate 270 degrees clockwise";
Blockly.Msg["OLED_ROTATE_NO_HORIZONTAL_MIRROR"] = "no rotation and horizontal mirror";
Blockly.Msg["OLED_ROTATE_NO_VERTICAL_MIRROR"] = "no rotation and vertical mirror";
Blockly.Msg["OLED_DISABLE"] = "disable";
Blockly.Msg["OLED_ENABLE"] = "enable";
Blockly.Msg["OLED_FONT_DEFAULT"] = "default font";
Blockly.Msg["OLED_CURSOR_HOME"] = "set cursor to home";
Blockly.Msg["OLED_CONTRAST"] = "contrast(0-255)";
Blockly.Msg["OLED_FONT_SET"] = "set font";
Blockly.Msg["OLED_FONT_SET_CHINESE"] = "set Chinese font";
Blockly.Msg["OLED_FONT_SET_IMAGE"] = "set image font";
Blockly.Msg["OLED_FONT_DRAW_DIRECTION"] = "set drawing direction of font";
Blockly.Msg["OLED_DISPLAY_LEFT_RIGHT"] = "display from left to right";
Blockly.Msg["OLED_DISPLAY_TOP_BOTTOM"] = "display from top to bottom";
Blockly.Msg["OLED_DISPLAY_RIGHT_LEFT"] = "display from right to left";
Blockly.Msg["OLED_DISPLAY_BOTTOM_TOP"] = "display from bottom to top";
Blockly.Msg["OLED_DRAW_COLOR"] = "draw color";
Blockly.Msg["OLED_DRAW_YANG"] = "1";
Blockly.Msg["OLED_DRAW_YIN"] = "0";
Blockly.Msg["OLED_DISPLAY_MODE"] = "display mode";
Blockly.Msg["OLED_ROTATE_NO_HORIZONTAL_MIRROR"] = "no rotation and horizontal mirror";
Blockly.Msg["OLED_SAVE_POWER"] = "save power mode";
Blockly.Msg["OLED_CLEAR"] = "clear";
Blockly.Msg["OLED_DRAW_BUFFER"] = "start drawing(buffer)";
Blockly.Msg["OLED_DRAW"] = "start drawing";
Blockly.Msg["OLED_DRAW_TEXT_ENGLISH_NUMBER"] = "draw a string(English and number)";
Blockly.Msg["OLED_TEXT"] = "text";
Blockly.Msg["OLED_SIZE"] = "size";
Blockly.Msg["OLED_DRAW_LOCAL_TTF"] = "draw a string using local font";
Blockly.Msg["OLED_NAME"] = "name";
Blockly.Msg["OLED_CURSOR_SET"] = "set cursor position";
Blockly.Msg["OLED_DRAW_TEXT_CURSOR"] = "draw a string at current cursor position";
Blockly.Msg["OLED_DRAW_IMAGE_UNICODE"] = "draw image(Unicode)";
Blockly.Msg["OLED_POSITION"] = "position";
Blockly.Msg["OLED_DRAW_TEXT_UTF8"] = "draw a string(UTF8)";
Blockly.Msg["OLED_STRING"] = "string";
Blockly.Msg["OLED_SET"] = "set";
Blockly.Msg["OLED_XBM"] = "XBM Bitmap";
Blockly.Msg["OLED_WHITEBACK_BLACKWORD"] = "black and white image";
Blockly.Msg["OLED_ARRAY"] = "array";
Blockly.Msg["OLED_DRAW_BACKGROUND_COLOR"] = "draw background color";
Blockly.Msg["OLED_TRANSPARENT_NO"] = "no transparent";
Blockly.Msg["OLED_TRANSPARENT"] = "transparent";
Blockly.Msg["OLED_DRAW_IMAGE"] = "draw image";
Blockly.Msg["OLED_WIDTH"] = "width";
Blockly.Msg["OLED_HEIGHT"] = "height";
Blockly.Msg["OLED_INDEX"] = "index";
Blockly.Msg["OLED_DRAW_PIXEL_IMAGE"] = "draw pixel image";
Blockly.Msg["OLED_DRAW_SQUARE_SOLID"] = "draw a box (filled frame)";
Blockly.Msg["OLED_CENTER_X"] = "centerï¼x";
Blockly.Msg["OLED_DRAW_SQUARE_SOLID_ROUND"] = "draw a box with round edges";
Blockly.Msg["OLED_REDIUS_ROUND"] = "round redius";
Blockly.Msg["OLED_DRAW_SQUARE_HOLLOW"] = "draw a frame (empty box)";
Blockly.Msg["OLED_DRAW_SQUARE_HOLLOW_ROUND"] = "draw a frame with round edges";
Blockly.Msg["OLED_DRAW_CIRCLE_HOLLOW"] = "draw a circle";
Blockly.Msg["OLED_CIRCLE_CENTER_X"] = "center of circleï¼x";
Blockly.Msg["OLED_REDIUS"] = "redius";
Blockly.Msg["OLED_OPTION"] = "option";
Blockly.Msg["OLED_CIRCLE"] = "circle ";
Blockly.Msg["OLED_ARC_LEFT_TOP"] = "left-top arc";
Blockly.Msg["OLED_ARC_RIGHT_BOTTOM"] = "right-bottom arc";
Blockly.Msg["OLED_DRAW_CIRCLE_SOLID"] = "draw a filled circle";
Blockly.Msg["OLED_DRAW_OVAL_HOLLOW"] = "draw an ellipse";
Blockly.Msg["OLED_REDIUS_HORIZONTAL"] = "horizontal redius";
Blockly.Msg["OLED_REDIUS_VERTICAL"] = "vertical redius";
Blockly.Msg["OLED_ARC_RIGHT_TOP"] = "right-top arc";
Blockly.Msg["OLED_ARC_LEFT_BOTTOM"] = "left-bottom arc";
Blockly.Msg["OLED_DRAW_OVAL_SOLID"] = "draw a filled ellipse";
Blockly.Msg["OLED_DRAW_LINE_HORIZONTAL"] = "draw horizontal line";
Blockly.Msg["OLED_START_X"] = "startï¼x";
Blockly.Msg["OLED_DRAW_LINE_VERTICAL"] = "draw vertical line";
Blockly.Msg["OLED_DRAW_LINE_DIP"] = "draw a line";
Blockly.Msg["OLED_END_X"] = "endï¼x";
Blockly.Msg["OLED_DRAW_TRIANGLE"] = "draw a triangle (filled polygon)";
Blockly.Msg["OLED_POINT1_X"] = "point 1ï¼x";
Blockly.Msg["OLED_POINT2_X"] = "point 2ï¼x";
Blockly.Msg["OLED_POINT3_X"] = "point 3ï¼x";
Blockly.Msg["OLED_DRAW_PIXEL_POINT"] = "draw a pixel";

Blockly.Msg["MQTT_FU_INITIAL"] = "Initial";
Blockly.Msg["MQTT_FU_ADDRESS"] = "address";
Blockly.Msg["MQTT_FU_PORT"] = "port";
Blockly.Msg["MQTT_FU_ID"] = "id";
Blockly.Msg["MQTT_FU_PASSWORD"] = "password";
Blockly.Msg["MQTT_FU_SUBSCRIBE_TOPIC"] = "subscribe topic";
Blockly.Msg["MQTT_FU_WHEN_GETDATA"] = "when getting text";
Blockly.Msg["MQTT_FU_GETDATA_TOPIC"] = "when getting text and the topic is";
Blockly.Msg["MQTT_FU_TO_TOPIC"] = "to topic";
Blockly.Msg["MQTT_FU_PUBLISH_TEXT"] = "publish text";
Blockly.Msg["MQTT_FU_GETDATA"] = "get data";
